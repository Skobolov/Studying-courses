
# # d**e**f
# print('d', 'e', 'f', sep='**')

# # a b c@d e f@@
# print('a', 'b', 'c', end='@')
# print('d', 'e', 'f', end='@@')

# # abc
# print('a', 'b', 'c', sep='', end='')

# print(a, b, sep = '\n') # а и b выведутся на новых строках

# ** Возведение в степень
# % Остаток от деления
# // Целочисленное деление

# a = num % 10
# b = (num % 100) // 10
# c = num // 100

# a = (num // 10**3) % 10
# b = (num // 10**2) % 10
# c = (num // 10**1) % 10
# d = (num // 10**0) % 10

# n = int(input())
# a = n // 10000
# b = n % 10000 // 1000
# c = n % 1000 // 100
# d = n % 100 // 10
# e = n % 10

import math

num1 = math.sqrt(2)     # вычисление корня квадратного из двух
num2 = math.ceil(3.8)   # округление числа вверх
num3 = math.floor(3.8)  # округление числа вниз

print(num1)
print(num2)
print(num3)

from math import *

num1 = sqrt(2)     # вычисление корня квадратного из двух
num2 = ceil(3.8)   # округление числа вверх
num3 = floor(3.8)  # округление числа вниз

print(num1)
print(num2)
print(num3)


a = [i for i in range(1, 7)]    # генератор списка  a = [1, 2, 3, 4, 5, 6]

# Строка
# s = (12345)
# print(s[::-1])  54321 - переворот строки

s = 'abcdefghijklmnopqrstuvwxyz'
# s = ''          # пустая строка
print(s[2])     # третий символ этой строки
print(s[-2])    # предпоследний символ этой строки
print(s[:5])    # первые пять символов этой строки
print(s[:-2])   # всю строку, кроме последних двух символов
print(s[0::2])  # все символы с четными индексами
print(s[1::2])  # все символы с нечетными индексами
print(s[::-1])  # все символы в обратном порядке
print(s[::-2])  # все символы строки через один в обратном порядке, начиная с последнего
print(s[-5:][::-1])    # последние пять символов в обратном порядке

s.capitalize()  # возвращает копию строки s, в которой первый символ имеет верхний регистр, а все остальные символы
                # имеют нижний регистр
s.swapcase()    # возвращает копию строки s, в которой все символы, имеющие верхний регистр, преобразуются в символы
                # нижнего регистра и наоборот
s.title()       # возвращает копию строки s, в которой первый символ каждого слова переводится в верхний регистр
s.lower()       # возвращает копию строки s, в которой все символы имеют нижний регистр
s.upper()       # возвращает копию строки s, в которой все символы имеют верхний регистр

lst = [input() for _ in range(int(input()))]

keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif',
            'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda']

new_keywords_1 = [i[1::] for i in keywords]     #содержащий строки исходного списка с удаленным первым символом
print(new_keywords_1)

lengths = [len(i) for i in keywords]    #содержащий длины строк исходного списка
print(lengths)

new_keywords_2 = [i for i in keywords if len(i) > 4]    #содержащий только слова длиной не менее пяти символов
print(new_keywords_2)

palindromes = [i for i in range(100, 1000) if i % 10 == i // 100]   #список всех чисел палиндромов от 100 до 1000
print(palindromes)

kub_keywords = [int(i) ** 3 for i in input().split()]     #подается строка текста, содержащая целые числа.
for i in kub_keywords:                                    #вывод кубов указанных чисел в строку
    print(i, end=' ')

print(*[i for i in input().split()], sep='\n')      #выводит слова введенной строки в столбик

print(*[i for i in input() if i.isdigit()], sep='')     #выводит все цифровые символы введенной строки

#подается строка целых чесел через пробел. вывод квадрата четных чисел, которые не оканчиваются на цифру 4
print(*[int(i) ** 2 for i in input().split() if int(i) % 2 == 0 and int(i) ** 2 % 10 != 4])